from celery import shared_task
from django.conf import settings

from crm.models import Task
from telegram_bot.sender_bot.task_notifications_senders import (send_telegram_notification_before_expire_task,
                                                                send_telegram_notification_at_expire_task)
from crm.celery_tasks.make_display_notifications_tasks import (one_workday_before_deadline_display_notification,
                                                               one_hour_before_deadline_display_notification,
                                                               at_expired_task_display_notification)

weekdays_mapping = {
    0: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
    1: "–í—Ç–æ—Ä–Ω–∏–∫",
    2: "–°—Ä–µ–¥–∞",
    3: "–ß–µ—Ç–≤–µ—Ä–≥",
    4: "–ü—è—Ç–Ω–∏—Ü–∞",
    5: "–°—É–±–±–æ—Ç–∞",
    6: "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
}

@shared_task
def one_workday_before_deadline_notification(task_id: int):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å.
    """
    task = Task.objects.get(id=task_id)
    telegram_id = task.manager.userprofile.telegram_id

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω
    domain = settings.BASE_URL
    task_absolute_url = f"{domain}{task.get_absolute_url()}"

    message = (
        f"‚è≥ –ó–∞–¥–∞—á–∞: '{task.title}' –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ "
        f"{task.must_be_completed_by.strftime('%d.%m.%Y–≥. –≤ %H:%M')} "
        f"({weekdays_mapping.get(task.must_be_completed_by.weekday())}).\n"
    )

    # –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ DisplayNotification
    one_workday_before_deadline_display_notification.delay(
        task_id=task.id
    )

    # –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≤ —Ç–≥
    send_telegram_notification_before_expire_task.delay(
        chat_id=telegram_id,
        message=message,
        task_url=task_absolute_url
    )
    task.before_one_workday_deadline_notification = True
    task.save()

@shared_task
def one_hour_before_deadline_notification(task_id: int):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É –æ —Ç–æ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞.
    """
    task = Task.objects.get(id=task_id)
    telegram_id = task.manager.userprofile.telegram_id

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω
    domain = settings.BASE_URL
    task_absolute_url = f"{domain}{task.get_absolute_url()}"

    message = (
        f"‚è≥ –ó–∞–¥–∞—á–∞: {task.title} –±—É–¥–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞.\n"
    )

    # –ó–∞–¥–∞—á–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ DisplayNotification
    one_hour_before_deadline_display_notification.delay(
        task_id=task.id
    )

    send_telegram_notification_before_expire_task.delay(
        chat_id=telegram_id,
        message=message,
        task_url=task_absolute_url
    )
    task.before_one_hour_deadline_notification = True
    task.save()


@shared_task
def notification_at_expired_task(task_id: int):
    """
        –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É –æ —Ç–æ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ —Å–µ–π—á–∞—Å.
    """
    task = Task.objects.get(id=task_id)
    telegram_id = task.manager.userprofile.telegram_id

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–æ–º–µ–Ω
    domain = settings.BASE_URL
    task_absolute_url = f"{domain}{task.get_absolute_url()}"

    message = (
        f"üö® –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–∞ –∑–∞–¥–∞—á–∞: {task.title}"
    )

    # –ó–∞–¥–∞—á–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ DisplayNotification
    at_expired_task_display_notification.delay(
        task_id=task.id
    )

    send_telegram_notification_at_expire_task.delay(
        chat_id=telegram_id,
        message=message,
        task_url=task_absolute_url,
        task_id=task_id
    )